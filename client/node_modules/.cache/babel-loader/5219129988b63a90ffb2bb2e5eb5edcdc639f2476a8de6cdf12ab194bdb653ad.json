{"ast":null,"code":"import React,{useState}from'react';// The Axios library, a promise-based HTTP client used to make requests to external\n//resources, in this case, your backedn, server.\nimport axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FinancialDashboard(){const[name,setName]=useState(\"\");const[selectedFile,setSelectedFile]=useState(null);// initialize name with empty string. setName will be used to update\nconst handleSubmit=async event=>{// an asynchronus function named handleSubmit that wull be called when the form is submitted.\n// It will await the response from an HTTP request made using Axios.\nevent.preventDefault();try{const response=await axios.post('/message',{name});// Makes a post request to the '/message' endpoint, sending an object with a \n// name property. It waits for the request to complete and stores the response in the \n// \"response\" variable. This is where the form data is sent to the server. \nconsole.log(response.data);// Log the response from the server\nalert('Name submitted successfully');}catch(error){console.error('There was an error submitting the form:',error);alert('Error submitting name');}};const handleFileChange=event=>{setSelectedFile(event.target.files[0]);};const handleFileUpload=async()=>{if(!selectedFile){alert(\"Please select a file first\");return;}const formData=new FormData();formData.append('file',selectedFile);try{const r=await axios.post('/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});console.log(r.data);alert(\"File uploaded successfully\");}catch(error){console.error(\"Error uploading file: \",error);alert(\"Error uploading file\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",name:\"name\",value:name,onChange:e=>setName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:handleFileChange}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFileUpload,children:\"Upload File\"})]})]});};export default FinancialDashboard;","map":{"version":3,"names":["React","useState","axios","jsx","_jsx","jsxs","_jsxs","FinancialDashboard","name","setName","selectedFile","setSelectedFile","handleSubmit","event","preventDefault","response","post","console","log","data","alert","error","handleFileChange","target","files","handleFileUpload","formData","FormData","append","r","headers","children","onSubmit","htmlFor","type","id","value","onChange","e","onClick"],"sources":["/Users/ishanaggarwal/Library/CloudStorage/OneDrive-TempleUniversity/03-ai-finance-assistant/client/src/financialDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// The Axios library, a promise-based HTTP client used to make requests to external\n//resources, in this case, your backedn, server.\nimport axios from 'axios';\n\nfunction FinancialDashboard() {\n  const [name, setName] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null)\n  // initialize name with empty string. setName will be used to update\n\n  const handleSubmit = async (event) => {\n    // an asynchronus function named handleSubmit that wull be called when the form is submitted.\n    // It will await the response from an HTTP request made using Axios.\n    event.preventDefault();\n    try {\n      const response = await axios.post('/message', { name });\n      // Makes a post request to the '/message' endpoint, sending an object with a \n      // name property. It waits for the request to complete and stores the response in the \n      // \"response\" variable. This is where the form data is sent to the server. \n      console.log(response.data); // Log the response from the server\n      alert('Name submitted successfully');\n    } catch (error) {\n      console.error('There was an error submitting the form:', error);\n      alert('Error submitting name');\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0])\n  } \n\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n        alert(\"Please select a file first\");\n        return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile)\n\n    try {\n        const r = await axios.post('/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        console.log(r.data)\n        alert(\"File uploaded successfully\");\n    } catch (error) {\n        console.error(\"Error uploading file: \", error)\n        alert(\"Error uploading file\")\n    }\n};\n\n\n\n  return (\n    <div>\n        <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n        </form>\n        <div>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button onClick={handleFileUpload}>Upload File</button>\n      </div>\n    </div>\n\n  );\n};\n\nexport default FinancialDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}