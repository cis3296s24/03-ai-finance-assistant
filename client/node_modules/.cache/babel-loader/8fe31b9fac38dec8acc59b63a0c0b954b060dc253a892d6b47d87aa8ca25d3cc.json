{"ast":null,"code":"import React,{useState,useEffect}from\"react\";// useState: create a state variable, which will contain data retreive from the backend\n// and the same state variable will be used to render the data on the page\n//useeffect: fetch the backend API on the first render. \nimport{jsx as _jsx}from\"react/jsx-runtime\";function MainContent(){const[data,setData]=useState(\"\");// setData is the function which can be used to manipulate the state of the data variable \n// initally it is blank, but will set to backend data\nuseEffect(()=>{fetch(\"/message\").then(// useEffect is used to retreive the data from the backend\nres=>res.json())// the data retreived will be stored into json\n.then(response=>{setData(response);// data is set using the setData function\nconsole.log(response);}).catch(error=>console.error(\"fect error:\",error));},[]);return/*#__PURE__*/_jsx(\"div\",{children:typeof data.message==='undefined'?/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}):data.message.map((message,i)=>/*#__PURE__*/_jsx(\"p\",{children:message},i))});}export default MainContent;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","MainContent","data","setData","fetch","then","res","json","response","console","log","catch","error","children","message","map","i"],"sources":["/Users/ishanaggarwal/Library/CloudStorage/OneDrive-TempleUniversity/03-ai-finance-assistant/client/src/MainContent.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n\n// useState: create a state variable, which will contain data retreive from the backend\n// and the same state variable will be used to render the data on the page\n\n//useeffect: fetch the backend API on the first render. \n\nfunction MainContent() {\n  const [data, setData] = useState(\"\")\n  // setData is the function which can be used to manipulate the state of the data variable \n  // initally it is blank, but will set to backend data\n\n  useEffect(() => {\n    fetch(\"/message\").then(\n      // useEffect is used to retreive the data from the backend\n      res => res.json())\n      // the data retreived will be stored into json\n    .then(response => {\n        setData(response) // data is set using the setData function\n        console.log(response)\n      })\n      .catch(error => console.error(\"fect error:\", error));\n  }, []);\n\n  return (\n    <div>\n        \n      {/* <p> Message from Backend: {message} </p> Render the message */}\n\n      {(typeof data.message === 'undefined') ? (\n        <p>Loading...</p>\n      ) : (\n        data.message.map((message, i) => (\n          <p key={i}>{message}</p>\n        ))\n      )}\n\n    </div>\n  )\n}\n\nexport default MainContent"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAGhD;AACA;AAEA;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBAEA,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CACpC;AACA;AAEAC,SAAS,CAAC,IAAM,CACdM,KAAK,CAAC,UAAU,CAAC,CAACC,IAAI,CACpB;AACAC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CACjB;AAAA,CACDF,IAAI,CAACG,QAAQ,EAAI,CACdL,OAAO,CAACK,QAAQ,CAAC,CAAC;AAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACvB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,EAAIH,OAAO,CAACG,KAAK,CAAC,aAAa,CAAEA,KAAK,CAAC,CAAC,CACxD,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,IAAA,QAAAa,QAAA,CAII,MAAO,CAAAX,IAAI,CAACY,OAAO,GAAK,WAAW,cACnCd,IAAA,MAAAa,QAAA,CAAG,YAAU,CAAG,CAAC,CAEjBX,IAAI,CAACY,OAAO,CAACC,GAAG,CAAC,CAACD,OAAO,CAAEE,CAAC,gBAC1BhB,IAAA,MAAAa,QAAA,CAAYC,OAAO,EAAXE,CAAe,CACxB,CACF,CAEE,CAAC,CAEV,CAEA,cAAe,CAAAf,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}