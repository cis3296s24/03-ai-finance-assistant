{"ast":null,"code":"var _jsxFileName = \"/Users/ishanaggarwal/Library/CloudStorage/OneDrive-TempleUniversity/03-ai-finance-assistant/client/src/financialDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// The Axios library, a promise-based HTTP client used to make requests to external\n//resources, in this case, your backedn, server.\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FinancialDashboard() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  // initialize name with empty string. setName will be used to update\n\n  const handleSubmit = async event => {\n    // an asynchronus function named handleSubmit that wull be called when the form is submitted.\n    // It will await the response from an HTTP request made using Axios.\n    event.preventDefault();\n    try {\n      const response = await axios.post('/message', {\n        name\n      });\n      // Makes a post request to the '/message' endpoint, sending an object with a \n      // name property. It waits for the request to complete and stores the response in the \n      // \"response\" variable. This is where the form data is sent to the server. \n      console.log(response.data); // Log the response from the server\n      alert('Name submitted successfully');\n    } catch (error) {\n      console.error('There was an error submitting the form:', error);\n      alert('Error submitting name');\n    }\n  };\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      alert(\"Please select a file first\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      const r = await axios.post('/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log(r.data);\n      alert(\"File uploaded successfully\");\n    } catch (error) {\n      console.error(\"Error uploading file: \", error);\n      alert(\"Error uploading file\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(FinancialDashboard, \"8PjbVyDk1WlW3cHYOaPwBj1zsQA=\");\n_c = FinancialDashboard;\n;\nexport default FinancialDashboard;\nvar _c;\n$RefreshReg$(_c, \"FinancialDashboard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","FinancialDashboard","_s","name","setName","selectedFile","setSelectedFile","handleSubmit","event","preventDefault","response","post","console","log","data","alert","error","handleFileChange","target","files","handleFileUpload","formData","FormData","append","r","headers","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","onClick","_c","$RefreshReg$"],"sources":["/Users/ishanaggarwal/Library/CloudStorage/OneDrive-TempleUniversity/03-ai-finance-assistant/client/src/financialDashboard.js"],"sourcesContent":["import React, { useState } from 'react';\n\n// The Axios library, a promise-based HTTP client used to make requests to external\n//resources, in this case, your backedn, server.\nimport axios from 'axios';\n\nfunction FinancialDashboard() {\n  const [name, setName] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null)\n  // initialize name with empty string. setName will be used to update\n\n  const handleSubmit = async (event) => {\n    // an asynchronus function named handleSubmit that wull be called when the form is submitted.\n    // It will await the response from an HTTP request made using Axios.\n    event.preventDefault();\n    try {\n      const response = await axios.post('/message', { name });\n      // Makes a post request to the '/message' endpoint, sending an object with a \n      // name property. It waits for the request to complete and stores the response in the \n      // \"response\" variable. This is where the form data is sent to the server. \n      console.log(response.data); // Log the response from the server\n      alert('Name submitted successfully');\n    } catch (error) {\n      console.error('There was an error submitting the form:', error);\n      alert('Error submitting name');\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setSelectedFile(event.target.files[0])\n  } \n\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n        alert(\"Please select a file first\");\n        return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', selectedFile)\n\n    try {\n        const r = await axios.post('/upload', formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        console.log(r.data)\n        alert(\"File uploaded successfully\");\n    } catch (error) {\n        console.error(\"Error uploading file: \", error)\n        alert(\"Error uploading file\")\n    }\n};\n\n\n\n  return (\n    <div>\n        <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n        />\n        <button type=\"submit\">Submit</button>\n        </form>\n        <div>\n        <input type=\"file\" onChange={handleFileChange} />\n        <button onClick={handleFileUpload}>Upload File</button>\n      </div>\n    </div>\n\n  );\n};\n\nexport default FinancialDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}